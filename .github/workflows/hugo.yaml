# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Fetch publication list
  fetch-publications:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo content
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9.12
      - name: Install pyalex
        run: |
          pip install pyalex==0.14
      - name: Run publication fetcher
        run: |
          cd content/recent_publications
          python get_publications.py > _index.md
          cd ../../
      - name: Push created file
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add content/recent_publications/_index.md
          git commit --allow-empty -m "fetched publications workflow"
          git push
  
  # check for NSFW content
  nsfw-detection:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo content
        uses: actions/checkout@main
      - name: Check for NSFW content
        uses: fabasoad/nsfw-detection-action@main
        with:
          provider: cloudmersive
          threshold: 0.9
          type: modified,added,renamed
          extensions: jpg,jpeg,png
          github_token: ${{ secrets.GITHUB_TOKEN }}
          api_key: ${{ secrets.CLOUDMERSIVE_API_KEY }}

  # Build job
  build:
    needs: fetch-publications
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.124.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build, nsfw-detection]
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
